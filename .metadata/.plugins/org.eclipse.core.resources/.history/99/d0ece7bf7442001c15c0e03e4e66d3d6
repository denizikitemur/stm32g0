/*
 * asm.s
 *
 * author: Furkan Cayci
 *
 * description: Added the necessary stuff for turning on the green LED on the
 *   G031K8 Nucleo board. Mostly for teaching.
 */


.syntax unified
.cpu cortex-m0plus
.fpu softvfp
.thumb


/* make linker see this */
.global Reset_Handler

/* get these from linker script */
.word _sdata
.word _edata
.word _sbss
.word _ebss


/* define peripheral addresses from RM0444 page 57, Tables 3-4 */
.equ RCC_BASE,         (0x40021000)          // RCC base address
.equ RCC_IOPENR,       (RCC_BASE   + (0x34)) // RCC IOPENR register offset

.equ GPIOC_BASE,       (0x50000800)          // GPIOC base address
.equ GPIOB_BASE,       (0x50000400)			 // GPIOB base address
.equ GPIOB_MODER,      (GPIOB_BASE + (0x00)) // GPIOC MODER register offset
.equ GPIOC_MODER,      (GPIOC_BASE + (0x00)) // GPIOC MODER register offset
.equ GPIOC_ODR,        (GPIOC_BASE + (0x14)) // GPIOC ODR offset
.equ GPIOB_ODR,        (GPIOB_BASE + (0x14))
.equ GPIOB_IDR,		   (GPIOB_BASE + (0X10)) // GPIOB IDR offset
.equ GPIOC_IDR,		   (GPIOC_BASE + (0X10)) // GPIOC IDR offset

/* vector table, +1 thumb mode */
.section .vectors
vector_table:
	.word _estack             /*     Stack pointer */
	.word Reset_Handler +1    /*     Reset handler */
	.word Default_Handler +1  /*       NMI handler */
	.word Default_Handler +1  /* HardFault handler */
	/* add rest of them here if needed */


/* reset handler */
.section .text
Reset_Handler:
	/* set stack pointer */
	ldr r0, =_estack
	mov sp, r0

	/* initialize data and bss
	 * not necessary for rom only code
	 * */
	bl init_data
	/* call main */
	bl main
	/* trap if returned */
	b .


/* initialize data and bss sections */
.section .text
init_data:

	/* copy rom to ram */
	ldr r0, =_sdata
	ldr r1, =_edata
	ldr r2, =_sidata
	movs r3, #0
	b LoopCopyDataInit

	CopyDataInit:
		ldr r4, [r2, r3]
		str r4, [r0, r3]
		adds r3, r3, #4

	LoopCopyDataInit:
		adds r4, r0, r3
		cmp r4, r1
		bcc CopyDataInit

	/* zero bss */
	ldr r2, =_sbss
	ldr r4, =_ebss
	movs r3, #0
	b LoopFillZerobss

	FillZerobss:
		str  r3, [r2]
		adds r2, r2, #4

	LoopFillZerobss:
		cmp r2, r4
		bcc FillZerobss

	bx lr


/* default handler */
.section .text
Default_Handler:
	b Default_Handler


/* main function */
.section .text
main:
	//114-119 => B serisi pinlerin akfit edilmesi
	ldr r6, =RCC_IOPENR
	ldr r5, [r6]
	ldr r4 ,=0x2//r4=0010
	orrs r5, r5, r4
	str r5, [r6]
	////////////////////////////////////////////

	//122-129 => PB0-PB6 pinlerinin çıkış, PB7 pininin ise giriş olarak tanımlanması
	ldr r6, =GPIOB_MODER
	ldr r5, [r6]
	ldr r4, =0xFFFFF  //r4=1111 1111 1111 1111 1111
	orrs r5, r5, r4 // r5=xxxx...1111 1111 1111 1111 1111
	ldr r4 ,=0x11555//  r4=0001 0001 0101 0101 0101
	ands r5, r5, r4//  r5=xxxx...0001 0101 0101 01019
	str r5, [r6]
	/////////////////////////////////////////////

	// Başlangıç durumu için D1 üzerindeki tüm ledlerin yakılması

buton1:
ldr r6, =GPIOB_ODR
ldr r5, [r6]
ldr r4, =0xFF//	 r4=1111 1111
orrs r5, r5, r4//r5=xxxx...1111 1111
str r5, [r6]

ldr r6, =GPIOB_IDR
ldr r5, [r6]
ldr r4, =0x80//r4=1000 0000
ands r5, r5, r4//r5=xxxx...x0000 0000
cmp r5, r4 //r5?=r4
beq ID1

bne buton1


delay:
ldr r4, =#2700000 // ite
delay1:
subs r4,r4,#1
bne delay1
bx lr

stop1:

ldr r6, =GPIOB_IDR
ldr r5, [r6]
ldr r4, =0x80//r4=1000 0000
ands r5, r5, r4//r5=x000 0000
cmp r5, r4 //r5?=r4
beq ID2

ldr r6, =GPIOB_IDR
ldr r5, [r6]
ldr r4, =0x200// r4=0010 0000 0000
ands r5, r5, r4//r5=00x0 0000 0000
cmp r5, r4 //r5?=r4
beq ID1_SAYAC
bne stop1

ID1:
ldr r6, =GPIOB_ODR
ldr r5, [r6]
ldr r4, =0xFF//r4=0101 1011
ands r5, r5, r4//r5=xxxx...0x0x x0xx
ldr r4, =0x5B//r4=0101 1011
orrs r5,r5,r4//r4=0101 1011
str r5, [r6]

ldr r6, =GPIOB_IDR
ldr r5, [r6]
ldr r4, =0x80//r4=1000 0000
ands r5, r5, r4//r5=x000 0000   *BUTON 1*
cmp r5, r4 //r5?=r4
beq ID1
bne stop1

ID1_SAYAC:

ldr r6, =GPIOB_ODR
	ldr r5, [r6]
	ldr r4, =0x100 //  0001 0000 0000
	orrs r5, r5, r4
	str r5, [r6]

bl delay


ldr r6, =GPIOB_ODR
ldr r5, [r6]
ldr r4, =0x1FF//r4=0001 1111 1111
orrs r5, r5, r4//r5=xxxx...0001 1111 1111								SSD üzerinde 8 gözükmesi
str r5, [r6]

bl delay

ldr r6, =GPIOB_ODR
ldr r5, [r6]
ldr r4, =0x147//r4=0001 0100 0111
ands r5, r5, r4//r5=xxxx...0x00 0xxx								SSD üzerinde 7 gözükmesi gere
orrs r5,r5,r4//r5=xxxx...0100 0111
str r5, [r6]

bl delay


ldr r6, =GPIOB_ODR
ldr r5, [r6]
ldr r4, =0x17D//r4=0001 0111 1101
ands r5, r5, r4//r5=xxxx...0xxx xx0x								SSD üzerinde 6 gözükmesi gerek
orrs r5,r5,r4//r5=xxxx...0111 1101
str r5, [r6]

bl delay

ldr r6, =GPIOB_ODR
ldr r5, [r6]
ldr r4, =0x16D//r4=0001 0110 1101
ands r5, r5, r4//r5=xxxx...0xx0 xx0x								SSD üzerinde 5 gözükmesi gerek
orrs r5,r5,r4//r5=xxxx...0110 1101
str r5, [r6]

bl delay

ldr r6, =GPIOB_ODR
ldr r5, [r6]
ldr r4, =0x166//r4=0001 0110 0100
ands r5, r5, r4//r5=xxxx...0xx0 0x00								SSD üzerinde 4 gözükmesi gerek
orrs r5,r5,r4//r5=xxxx...0110 0100
str r5, [r6]

bl delay

ldr r6, =GPIOB_ODR
ldr r5, [r6]
ldr r4, =0x14F//r4=0001 0100 1111
ands r5, r5, r4//r5=xxxx...0x00 xxxx								SSD üzerinde 3 gözükmesi gerek
orrs r5,r5,r4//r5=xxxx...0100 1111
str r5, [r6]

bl delay


ldr r6, =GPIOB_ODR
ldr r5, [r6]
ldr r4, =0x15B//r4=0001 0101 1011
ands r5, r5, r4//r5=xxxx...0x0x x0xx								SSD üzerinde 2 gözükmesi gerek
orrs r5,r5,r4//r4=0101 1011
str r5, [r6]

bl delay

ldr r6, =GPIOB_ODR
ldr r5, [r6]
ldr r4, =0x130//r4=0001 0011 0000
ands r5, r5, r4//r5=xxxx...00xx 0000								SSD üzerinde 1 gözükmesi gerek
orrs r5,r5,r4//r5=xxxx...0011 0000
str r5, [r6]

bl delay

ldr r6, =GPIOB_ODR
ldr r5, [r6]
ldr r4, =0x13F//r4=0001 0011 1111
ands r5, r5, r4//r5=xxxx...00xx xxxx								SSD üzerinde  0 gözükmesi gerek
orrs r5, r5, r4//r5=xxxx...0011 1111
str r5, [r6]

bl delay

ldr r6, =GPIOB_ODR
ldr r5, [r6]
ldr r4, =0x03F//r4=0001 0011 1111
ands r5, r5, r4//r5=xxxx...00xx xxxx								SSD üzerinde  0 gözükmesi gerek
orrs r5, r5, r4//r5=xxxx...0011 1111
str r5, [r6]

bl delay

ldr r6, =GPIOB_ODR
	ldr r5, [r6]
	ldr r4, =0x100 //  0001 0000 0000
	mvns r4,r4
	ands r5, r5, r4
	str r5, [r6]

b stop1

ID2:
ldr r6, =GPIOB_ODR
ldr r5, [r6]
ldr r4, =0x6D//r4=0110 1101
ands r5, r5, r4//r5=xxxx...0xx0 xx0x
ldr r4, =0x6D//r4=0110 1101
orrs r5, r5, r4//r5=xxxx...0110 1101
str r5, [r6]

ldr r6, =GPIOB_IDR
ldr r5, [r6]
ldr r4, =0x80//r4=1000 0000
ands r5, r5, r4//x000 0000
cmp r5, r4 //r5?=r4
beq ID2
bne stop2

stop2:
ldr r6, =GPIOB_IDR
ldr r5, [r6]
ldr r4, =0x80//r4=1000 0000
ands r5, r5, r4//r5=x000 0000
cmp r5, r4 //r5?=r4
beq ID3

ldr r6, =GPIOB_IDR
ldr r5, [r6]
ldr r4, =0x200// r4=0010 0000 0000
ands r5, r5, r4//r5=00x0 0000 0000
cmp r5, r4 //r5?=r4
beq ID2_SAYAC

bne stop2

stop3:
bl delay
ldr r6, =GPIOB_IDR
ldr r5, [r6]
ldr r4, =0x80//r4=1000 0000
ands r5, r5, r4//r5=x000 0000
cmp r5, r4 //r5?=r4
beq ID1

ldr r6, =GPIOB_IDR
ldr r5, [r6]
ldr r4, =0x200// r4=0010 0000 0000
ands r5, r5, r4//r5=00x0 0000 0000
cmp r5, r4 //r5?=r4
beq ID3_SAYAC

bne stop3

ID2_SAYAC:
ldr r6, =GPIOB_ODR
	ldr r5, [r6]
	ldr r4, =0x100 //  0001 0000 0000
	orrs r5, r5, r4
	str r5, [r6]

bl delay

ldr r6, =GPIOB_ODR
ldr r5, [r6]
ldr r4, =0x16D//r4=0001 0110 1101
ands r5, r5, r4//r5=xxxx...0xx0 xx0x								SSD üzerinde 5 gözükmesi gerek
orrs r5,r5,r4//r5=xxxx...0110 1101
str r5, [r6]

bl delay

ldr r6, =GPIOB_ODR
ldr r5, [r6]
ldr r4, =0x166//r4=0001 0110 0100
ands r5, r5, r4//r5=xxxx...0xx0 0x00								SSD üzerinde 4 gözükmesi gerek
orrs r5,r5,r4//r5=xxxx...0110 0100
str r5, [r6]

bl delay

ldr r6, =GPIOB_ODR
ldr r5, [r6]
ldr r4, =0x14F//r4=0001 0100 1111
ands r5, r5, r4//r5=xxxx...0x00 xxxx								SSD üzerinde 3 gözükmesi gerek
orrs r5,r5,r4//r5=xxxx...0100 1111
str r5, [r6]

bl delay

ldr r6, =GPIOB_ODR
ldr r5, [r6]
ldr r4, =0x15B//r4=0001 0101 1011
ands r5, r5, r4//r5=xxxx...0x0x x0xx								SSD üzerinde 2 gözükmesi gerek
orrs r5,r5,r4//r4=0101 1011
str r5, [r6]

bl delay

ldr r6, =GPIOB_ODR
ldr r5, [r6]
ldr r4, =0x130//r4=0001 0011 0000
ands r5, r5, r4//r5=xxxx...00xx 0000								SSD üzerinde 1 gözükmesi gerek
orrs r5,r5,r4//r5=xxxx...0011 0000
str r5, [r6]

bl delay

ldr r6, =GPIOB_ODR
ldr r5, [r6]
ldr r4, =0x13F//r4=0001 0011 1111
ands r5, r5, r4//r5=xxxx...00xx xxxx								SSD üzerinde  0 gözükmesi gerek
orrs r5, r5, r4//r5=xxxx...0011 1111
str r5, [r6]

bl delay

ldr r6, =GPIOB_ODR
ldr r5, [r6]
ldr r4, =0x03F//r4=0001 0011 1111
ands r5, r5, r4//r5=xxxx...00xx xxxx								SSD üzerinde  0 gözükmesi gerek
orrs r5, r5, r4//r5=xxxx...0011 1111
str r5, [r6]

bl delay

ldr r6, =GPIOB_ODR
	ldr r5, [r6]
	ldr r4, =0x100 //  0001 0000 0000
	mvns r4,r4
	ands r5, r5, r4
	str r5, [r6]

b stop2

ID3:
ldr r6, =GPIOB_ODR
ldr r5, [r6]
ldr r4, =0x3F//r4=0011 1111
ands r5, r5, r4//r5=xxxx...00xx xxxx
orrs r5, r5, r4//r5=xxxx...0011 1111
str r5, [r6]

ldr r6, =GPIOB_IDR
ldr r5, [r6]
ldr r4, =0x80//r4=1000 0000
ands r5, r5, r4
cmp r5, r4 //r5?=r4
beq ID3
bne stop3

ID3_SAYAC:
ldr r6, =GPIOB_ODR
	ldr r5, [r6]
	ldr r4, =0x100 //  0001 0000 0000
	orrs r5, r5, r4
	str r5, [r6]

bl delay
ldr r6, =GPIOB_ODR
ldr r5, [r6]
ldr r4, =0x16F//r4=0001 0110 1111
ands r5, r5, r4//r5=xxxx...0xx0 xxxx
orrs r5, r5, r4//r5=xxxx...0110 1111								SSD üzerinde 9 gözükmesi
str r5, [r6]

bl delay


ldr r6, =GPIOB_ODR
ldr r5, [r6]
ldr r4, =0x1FF//r4=0001 1111 1111
orrs r5, r5, r4//r5=xxxx...0001 1111 1111								SSD üzerinde 8 gözükmesi
str r5, [r6]

bl delay

ldr r6, =GPIOB_ODR
ldr r5, [r6]
ldr r4, =0x147//r4=0001 0100 0111
ands r5, r5, r4//r5=xxxx...0x00 0xxx								SSD üzerinde 7 gözükmesi gere
orrs r5,r5,r4//r5=xxxx...0100 0111
str r5, [r6]

bl delay


ldr r6, =GPIOB_ODR
ldr r5, [r6]
ldr r4, =0x17D//r4=0001 0111 1101
ands r5, r5, r4//r5=xxxx...0xxx xx0x								SSD üzerinde 6 gözükmesi gerek
orrs r5,r5,r4//r5=xxxx...0111 1101
str r5, [r6]

bl delay

ldr r6, =GPIOB_ODR
ldr r5, [r6]
ldr r4, =0x16D//r4=0001 0110 1101
ands r5, r5, r4//r5=xxxx...0xx0 xx0x								SSD üzerinde 5 gözükmesi gerek
orrs r5,r5,r4//r5=xxxx...0110 1101
str r5, [r6]

bl delay

ldr r6, =GPIOB_ODR
ldr r5, [r6]
ldr r4, =0x166//r4=0001 0110 0100
ands r5, r5, r4//r5=xxxx...0xx0 0x00								SSD üzerinde 4 gözükmesi gerek
orrs r5,r5,r4//r5=xxxx...0110 0100
str r5, [r6]

bl delay

ldr r6, =GPIOB_ODR
ldr r5, [r6]
ldr r4, =0x14F//r4=0001 0100 1111
ands r5, r5, r4//r5=xxxx...0x00 xxxx								SSD üzerinde 3 gözükmesi gerek
orrs r5,r5,r4//r5=xxxx...0100 1111
str r5, [r6]

bl delay

ldr r6, =GPIOB_ODR
ldr r5, [r6]
ldr r4, =0x15B//r4=0001 0101 1011
ands r5, r5, r4//r5=xxxx...0x0x x0xx								SSD üzerinde 2 gözükmesi gerek
orrs r5,r5,r4//r4=0101 1011
str r5, [r6]

bl delay

ldr r6, =GPIOB_ODR
ldr r5, [r6]
ldr r4, =0x130//r4=0001 0011 0000
ands r5, r5, r4//r5=xxxx...00xx 0000								SSD üzerinde 1 gözükmesi gerek
orrs r5,r5,r4//r5=xxxx...0011 0000
str r5, [r6]

bl delay

ldr r6, =GPIOB_ODR
ldr r5, [r6]
ldr r4, =0x13F//r4=0011 1111
ands r5, r5, r4//r5=xxxx...00xx xxxx								SSD üzerinde  0 gözükmesi gerek
orrs r5, r5, r4//r5=xxxx...0011 1111
str r5, [r6]

bl delay

ldr r6, =GPIOB_ODR
ldr r5, [r6]
ldr r4, =0x03F//r4=0001 0011 1111
ands r5, r5, r4//r5=xxxx...00xx xxxx								SSD üzerinde  0 gözükmesi gerek
orrs r5, r5, r4//r5=xxxx...0011 1111
str r5, [r6]

bl delay
ldr r6, =GPIOB_ODR
	ldr r5, [r6]
	ldr r4, =0x100 //  0001 0000 0000
	mvns r4,r4
	ands r5, r5, r4
	str r5, [r6]


b stop3

	/* for(;;); */
	b .

	/* this should never get executed */
	nop
